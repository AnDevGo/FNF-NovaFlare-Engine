name: InstallHaxelib

on:
  workflow_dispatch:
    inputs:
      dependencies_to_update:
        description: '输入 "all" 更新所有haxelib, 或指定库名 (e.g. "lime,openfl")不输入即不给haxelib做任何更新'
        required: false
        type: string
        default: ''
  workflow_call:
    inputs:
      dependencies_to_update:
        description: '输入 "all" 更新所有haxelib, 或指定库名 (e.g. "lime,openfl")不输入即不给haxelib做任何更新'
        required: false
        type: string
        default: ''

env:
  HAXE_VERSION: 4.3.7

jobs:
  build:
    name: InstallHaxelib
    runs-on: macos-15
    concurrency:
      group: ${{ github.workflow }}-Haxelib-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}

      - name: cache install
        uses: actions/cache/restore@v4
        id: HaxelibCache
        with:
          key: cache-install-Haxelib
          path: |
            .haxelib/
        
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          if [ "${{ inputs.dependencies_to_update }}" == "all" ] || [ ! -d ".haxelib/" ]; then
            echo "Updating all dependencies..."
            haxelib install hmm 
            haxelib run hmm reinstall -f
          elif [ -n "${{ inputs.dependencies_to_update }}" ] && [ "${{ github.event.inputs.dependencies_to_update }}" != "ios" ] && [ "${{ github.event.inputs.dependencies_to_update }}" != "android" ]; then
            echo "Updating specified dependencies: ${{ inputs.dependencies_to_update }}"
            haxelib install hmm
            haxelib run hmm reinstall --force $(echo "${{ inputs.dependencies_to_update }}")
          else
            echo "No dependencies specified, only installing hmm"
          fi

      - name: Make Haxelib Zip
        run: |
          zip -r /Users/runner/haxelib.zip .haxelib/

      - name: Upload Haxelib
        uses: actions/upload-artifact@main
        with:
          name: Haxelib
          path: /Users/runner/haxelib.zip
          if-no-files-found: error

      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-install-Haxelib") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache/save@v4
        id: HaxelibCache
        with:
          key: cache-install-Haxelib
          path: |
            .haxelib/